import KUTGSearch from '../../features/KUTGSearch';
import { QuestionCategory } from './features/QuestionCategory';
import { useEffect, useMemo, useState } from 'react';
import { QuestionsHttp, type QuestionDTO } from '@/services/api/QuestionsHttp';
import KUTGLoading from '../../features/KUTGLoading';
import { QuestionCard } from './features/QuestionCard';


<<<<<<< Updated upstream
=======
type FAQItem = {
	question: string;
	answer: string;
	tag: string;
};

const FAQ_LIST: FAQItem[] = [
	{ question: 'Справка с военкомата', tag: 'Документы', answer: 'Обратитесь в деканат вашего института или в отдел по воинскому учёту университета. Обычно требуется заявление, студенческий билет и удостоверение личности. Срок подготовки — 1–3 рабочих дня.' },
	{ question: 'Справка с места учебы', tag: 'Документы', answer: 'Справку можно получить в деканате или через электронную приёмную (если доступна). Возьмите удостоверение личности. Некоторые справки можно заказать через бухгалтерию для стипендий/банков.' },
	{ question: 'Приемная комиссия', tag: 'Поступление', answer: 'Приёмная комиссия находится в главном корпусе (1 корп.). График и контакты смотрите на сайте университета в разделе «Абитуриенту». Вопросы по документам, срокам и квотам можно задать по официальным телефонам.' },
	{ question: 'Если завалил экзамен куда идти (пересдача, перезачет)', tag: 'Учёба', answer: 'Сначала обратитесь к преподавателю за консультацией. Пересдачи назначаются кафедрой/деканатом. Узнайте сроки и форму пересдачи, оплатите при необходимости (для повторного прослушивания) и получите направление в учебном отделе.' },
	{ question: 'Что делать если потерял корпус', tag: 'Кампус', answer: 'Уточните у сотрудников на постах охраны или используйте карту в приложении. В «Здания» выберите нужный корпус — будет показан адрес, входы и ориентиры.' },
	{ question: 'Военная кафедра', tag: 'Учёба', answer: 'Информация и отбор на военную кафедру публикуются на сайте университета и стендах кафедры. Как правило, нужен конкурс: медицинская комиссия, физподготовка, успеваемость и гражданство. Сроки подачи — в начале учебного года.' },
	{ question: 'Как узнать задолженность по обучению', tag: 'Финансы', answer: 'Проверьте личный кабинет студента или обратитесь в бухгалтерию/деканат. Там сообщат сумму, реквизиты и срок оплаты. Храните квитанции об оплате.' },
	{ question: 'Как получить доступ к бассейну (про скидки, врачей)', tag: 'Спорт', answer: 'Нужна медсправка от терапевта (иногда — кардиограмма), студбилет и абонемент. Скидки для студентов действуют при предъявлении студбилета. Расписание и цены — в спорткомплексе.' },
	{ question: 'Как записаться на секции', tag: 'Спорт', answer: 'Выберите секцию на стенде спортклуба или сайте. Запись — через тренера или администратора спорткомплекса. Нужен студбилет, иногда — медицинская справка.' },
	{ question: 'Есть ли скидки на обучение', tag: 'Финансы', answer: 'Скидки предоставляются на основании успеваемости, достижений или социального статуса. Уточните условия в деканате/бухгалтерии и следите за приказами университета.' },
	{ question: 'Стипендии (президентские)', tag: 'Стипендии', answer: 'Президентские и иные повышенные стипендии назначаются по конкурсу: высокая успеваемость, достижения, публикации. Следите за объявлениями кафедры и сдавайте пакет документов в установленный срок.' },
	{ question: 'Куда нести реквизиты карты для стипендии', tag: 'Стипендии', answer: 'Реквизиты предоставляются в бухгалтерию/стипендиальный отдел вашего института. Обычно требуется заявление и копия реквизитов (IBAN/БИК). Уточните банк-партнёр университета.' },
	{ question: 'Как оплатить учебу со "специального счета"', tag: 'Финансы', answer: 'Обратитесь в банк, где открыт специальный счёт, и запросите платёж по реквизитам университета. Бухгалтерия предоставит назначение платежа и сумму. Сохраните чек.' },
	{ question: 'Как уехать по мобильности', tag: 'Мобильность', answer: 'Обратитесь в международный отдел. Потребуются: успеваемость без долгов, знание языка (при необходимости), мотивационное письмо, Learning Agreement. Сроки подачи заявок — за семестр до поездки.' },
	{ question: 'Как поступить на дуальное обучение (что это и как)', tag: 'Учёба', answer: 'Дуальное обучение совмещает учёбу и работу на предприятии. Отбор проходит через кафедру/партнёров: собеседование, заключение договора, индивидуальный график. Узнайте список программ на сайте.' },
	{ question: 'Где оформить прописку иностранным студентам', tag: 'Иностранцам', answer: 'Обратитесь в отдел по работе с иностранными студентами. Для регистрации понадобятся паспорт, миграционная карта, договор проживания и документы университета.' },
	{ question: 'Куда отнести документ о прикрепленной поликлиники', tag: 'Здоровье', answer: 'Документы о прикреплении подаются в медицинский пункт университета или в деканат для передачи. Уточните срок подачи в начале семестра.' },
	{ question: 'Как получить читальный билет', tag: 'Библиотека', answer: 'Придите в библиотеку с удостоверением личности и студенческим. Заполните карточку читателя и получите доступ к абонементу и читальным залам.' },
	{ question: 'Как получить красный диплом', tag: 'Учёба', answer: 'Требуется высокий средний балл (обычно ≥ 3.5/4 или эквивалент), отсутствие троек и дисциплинарных взысканий, защита ВКР на «отлично». Точные критерии — в регламенте университета.' },
	{ question: 'Какой балл допуска к сессии', tag: 'Учёба', answer: 'Минимальный проходной балл по дисциплине и пороги допуска устанавливаются регламентом рейтинговой системы. Обычно требуется набрать не менее 50–60% текущих баллов.' },
	{ question: 'Куда отнести флюорографию', tag: 'Здоровье', answer: 'Снимок/справку о флюорографии сдайте в медпункт университета или в деканат на ваш институт. Срок — обычно в первые недели семестра.' },
	{ question: 'Академ отпуск', tag: 'Учёба', answer: 'Академический отпуск оформляется через деканат по заявлению. Нужны основания (медицинские, семейные и пр.) и подтверждающие документы. Срок — от 6 месяцев до 1 года.' },
	{ question: 'Что делать если мне нужно уехать на пару дней', tag: 'Учёба', answer: 'Предупредите куратора и преподавателей, при необходимости — оформите заявление в деканате. Договоритесь о закрытии пропусков и сдаче работ.' },
	{ question: 'Рейтинговая система', tag: 'Учёба', answer: 'Рейтинг складывается из текущего контроля, рубежного контроля и итоговой аттестации. Весовые коэффициенты и пороги указаны в положении о рейтинговой системе.' },
	{ question: 'Что такое кредиты', tag: 'Учёба', answer: 'Кредит — условная единица трудоёмкости дисциплины (обычно 30 академических часов). Количество кредитов влияет на нагрузку и план обучения.' },
	{ question: 'Как оплачивать', tag: 'Финансы', answer: 'Оплата производится по реквизитам университета через банк/онлайн-банкинг. Уточните сумму и назначение в бухгалтерии или личном кабинете.' },
	{ question: 'Как перевестись', tag: 'Перевод/Отчисление', answer: 'Для перевода подайте заявление в деканат, приложите академсправку и транскрипт. Согласуйте разницу в планах и сроки. Возможен перевод между вузами/внутри вуза.' },
	{ question: 'Как отчислиться', tag: 'Перевод/Отчисление', answer: 'Подайте заявление на отчисление в деканат, закройте долги, сдайте материальные ценности (библиотека, общежитие). Получите академсправку и приказы.' },
	{ question: 'Гранты (надо отработать и ТД)', tag: 'Гранты', answer: 'Гранты бывают целевые и государственные. Условия: конкурс, отчётность, иногда обязательная отработка у грантодателя. Следите за объявлением конкурсов в научном отделе.' },
];

>>>>>>> Stashed changes
export default function Help() {
    const [items, setItems] = useState<QuestionDTO[]>([]);
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState<string | null>(null);
    const [searchValue, setSearchValue] = useState<string>("");
    const [selectedCategory, setSelectedCategory] = useState<string>("");

    const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {
        setSearchValue(event.target.value.toLowerCase());
    };

    useEffect(() => {
        void load();
    }, []);

    const filteredIds = useMemo(() => {
        if (!searchValue.trim()) return items.map(b => b.id);

        return items
            .filter(b =>
                b.question.toLowerCase().includes(searchValue) ||
                b.answer?.toLowerCase().includes(searchValue)
            )
            .map(b => b.id);
    }, [searchValue, items]);

    const handleCategoryClick = (category: string) => {
        setSelectedCategory(prev => (prev === category ? "" : category));
    };
    const removeSelectedCategory = () => {
        setSelectedCategory("");
    };

    async function load() {
        try {
            setLoading(true);
            setError(null);
            const data = await QuestionsHttp.list();
            setItems(data);
        } catch (e: any) {
            setError(e?.message || "Не удалось загрузить вопросы");
        } finally {
            setLoading(false);
        }
    }

    const categories = useMemo(() => {
        const set = new Set(items.map(q => q.category));
        return Array.from(set);
    }, [items]);

    return (
        <>
            <KUTGSearch onChange={handleInput} />
            <div>
                <div className='category-filter'>
                    {searchValue === "" && selectedCategory === "" && (
                        <p className='hint'>Выберите категорию или введите интересующий вас вопрос</p>
                    )}

                    {selectedCategory && (
                        <div
                            className="selected-questions-category"
                            onClick={removeSelectedCategory}
                        >
                            {selectedCategory}
                        </div>
                    )}

                    {searchValue && !selectedCategory && (
                        <p className='hint'>Результаты поиска по запросу: "{searchValue}"</p>
                    )}
                </div>
                {error && <div className="error">{error}</div>}
                {loading && <KUTGLoading />}
                {!loading && !error && searchValue == "" && selectedCategory == "" && categories.map(category => (
                    <QuestionCategory key={category} category={category}
                        onClick={() => handleCategoryClick(category)} />
                ))}

                {(searchValue !== "" || selectedCategory !== "") && items.map((item: QuestionDTO) => (
                    filteredIds.includes(item.id) &&
                    (selectedCategory === "" || item.category === selectedCategory) &&
                    <QuestionCard
                        key={"question-" + item.id}
                        question={item.question}
                        answer={item.answer}
                    />
                ))}
            </div>
        </>
    );
}
